{"version":3,"sources":["logo.svg","atoms/Instructions.js","atoms/Ingredient.js","organisms/IngredientList.js","shared/StarRating.js","atoms/Recipe.js","data.js","organisms/RecipesList.js","App.js","reportWebVitals.js","index.js"],"names":["Instructions","props","componentIsMounted","useRef","useEffect","console","log","current","className","title","steps","map","s","i","Ingredient","amount","measurement","name","IngredientList","list","ingredient","StarRating","length","style","totalStars","useState","selectedStars","setSelectedStars","Star","selected","onSelect","f","color","onClick","padding","Array","n","Recipe","index","ingredients","menu","RecipesList","setRecipes","item","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e1371ff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// ./src/components/Instructions.js\r\nimport { createElement, useState, useEffect, useRef } from 'react';\r\nimport React from \"react\";\r\n/*\r\nexport default function Instructions({ title, steps }) {\r\nreturn (\r\n    <section className=\"instructions\">\r\n        <h2>{title}</h2>\r\n        {steps.map((s, i) => (\r\n        <p key={i}>{s}</p>\r\n        ))}\r\n        </section>\r\n    );\r\n}*/\r\n\r\nfunction Instructions(props) {\r\n\r\n    const componentIsMounted = useRef(true);\r\n    \r\n    useEffect(() => {\r\n        console.log(\"instructions mounted\");\r\n\r\n        return () => {\r\n            console.log(\"unmount instructions\")\r\n            componentIsMounted.current = false;\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <section className=\"instructions\">\r\n            <h1>{props.title}</h1>\r\n            {props.steps.map((s, i) => (\r\n            <p key={i}>{s}</p>\r\n            ))}\r\n        </section>\r\n        );  \r\n}\r\n\r\nexport default Instructions;","import React from \"react\";\r\n\r\n\r\nfunction Ingredient({amount, measurement, name}) {\r\n    return (\r\n        <li>\r\n        {amount} {measurement} {name}\r\n        </li>\r\n        );  \r\n}\r\n\r\nexport default Ingredient;","import React from \"react\";\r\nimport Ingredient from '../atoms/Ingredient';\r\n\r\n\r\nfunction IngredientList({list}) {   \r\n    return (\r\n        <ul className=\"ingredients\">\r\n            {list.map((ingredient, i) => (\r\n            <Ingredient key={i} {...ingredient} />   \r\n            ))}\r\n        </ul>\r\n        );  \r\n}\r\n\r\nexport default IngredientList;","import React, { useState, useEffect } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\n\r\nexport default function StarRating({ style={}, totalStars = 5 }) {\r\n  \r\n    const [selectedStars, setSelectedStars] = useState(2);\r\n\r\n    const Star = ({ selected = false, onSelect = f => f }) => (\r\n  \r\n        <FaStar color={selected ? \"red\" : \"grey\"} onClick={onSelect} />\r\n        );\r\n\r\n    const createArray = length => [...Array(length)];\r\n\r\n    useEffect(() => {\r\n        console.log(\"star mounted\");\r\n\r\n        return () => {\r\n            console.log(\"star unmount\")\r\n        };\r\n    }, []);\r\n    return (\r\n        \r\n    <div style={{ padding: \"5px\", ...style }}>\r\n\r\n        {createArray(totalStars).map((n, i) => (      \r\n        <Star key={i} selected={selectedStars > i} \r\n        onSelect={() => setSelectedStars(i + 1)}\r\n        />\r\n        ))}\r\n        <p>     \r\n        {selectedStars} of {totalStars} stars   \r\n        </p>\r\n    </div>\r\n    );\r\n    }\r\n    ","import React from 'react';\nimport Instructions from './Instructions';\nimport IngredientList from '../organisms/IngredientList';\nimport StarRating from '../shared/StarRating'\nimport { createElement, useState, useEffect, useRef } from 'react';\n\nfunction Recipe(props) {\n\n  useEffect(() => {\n    //console.log(props.steps);\n  \n}, []);\n\n  return (\n    <div className=\"Recipe\">\n      This is the Recipe of {props.name}{props.index}\n      <IngredientList list={props.ingredients} />\n      <Instructions title=\"Cookin Instructions\" {...props}/>\n      <StarRating key={props.index}/>\n    </div>\n  );\n}\n\nexport default Recipe;\n","export const menu = [\r\n  \r\n    {\r\n        \r\n    name: \"Baked Salmon\",\r\n    ingredients: [   \r\n    { name: \"Salmon\", amount: 1, measurement: \"l lb\" },\r\n          \r\n    { name: \"Pine Nuts\", amount: 1, measurement: \"cup\" },\r\n          \r\n    { name: \"Butter Lettuce\", amount: 2, measurement: \"cups\" },\r\n          \r\n    { name: \"Yellow Squash\", amount: 1, measurement: \"med\" },\r\n          \r\n    { name: \"Olive Oil\", amount: 0.5, measurement: \"cup\" },\r\n          \r\n    { name: \"Garlic\", amount: 3, measurement: \"cloves\" }\r\n        \r\n    ],\r\n        \r\n    steps: [\r\n          \r\n    \"Preheat the oven to 350 degrees.\",\r\n          \r\n    \"Spread the olive oil around a glass baking dish.\",\r\n          \r\n    \"Add the yellow squash and place in the oven for 30 mins.\",\r\n          \r\n    \"Add the salmon, garlic, and pine nuts to the dish.\",\r\n          \r\n    \"Bake for 15 minutes.\",\r\n          \r\n    \"Remove from oven. Add the lettuce and serve.\"\r\n        \r\n    ]\r\n      \r\n    },\r\n      \r\n    {\r\n        \r\n    name: \"Fish Tacos\",\r\n        \r\n    ingredients: [\r\n          \r\n    { name: \"Whitefish\", amount: 1, measurement: \"l lb\" },\r\n          \r\n    { name: \"Cheese\", amount: 1, measurement: \"cup\" },\r\n          \r\n    { name: \"Iceberg Lettuce\", amount: 2, measurement: \"cups\" },\r\n          \r\n    { name: \"Tomatoes\", amount: 2, measurement: \"large\" },\r\n          \r\n    { name: \"Tortillas\", amount: 3, measurement: \"med\" }\r\n        \r\n    ],\r\n        \r\n    steps: [\r\n          \r\n    \"Cook the fish on the grill until hot.\",\r\n          \r\n    \"Place the fish on the 3 tortillas.\",\r\n          \r\n    \"Top them with lettuce, tomatoes, and cheese.\"\r\n        \r\n    ]\r\n      \r\n    }\r\n    ];\r\n    \r\n    export default {\r\n        menu,\r\n    }","import React from 'react';\r\nimport { createElement, useState, useEffect, useRef } from 'react';\r\nimport Recipe from '../atoms/Recipe';\r\nimport {menu} from '../data';\r\n\r\n\r\n\r\nfunction RecipesList() {\r\n    const [recipes, setRecipes] = useState([]);\r\n    const componentIsMounted = useRef(true);\r\n    \r\n    useEffect(() => {\r\n        console.log(\"Recipes list mounted\");\r\n        setRecipes(menu)\r\n\r\n        return () => {\r\n            componentIsMounted.current = false;\r\n        };\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"Recipe\">\r\n        <ul>\r\n            {menu.map((item,index)=> (\r\n                //<li key={index}>{item.name}</li>\r\n                <Recipe key={index} {...item}></Recipe>\r\n            ))}\r\n        </ul>\r\n\r\n        \r\n        This is the Recipes List component !!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecipesList;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport RecipesList from './organisms/RecipesList';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.jsss</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n          <RecipesList></RecipesList>\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}